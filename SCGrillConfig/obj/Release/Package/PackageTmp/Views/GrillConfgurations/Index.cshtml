@model IEnumerable<SCGrillConfig.Models.GrillConfguration>

@{
    ViewBag.Title = "Index GrillConfguration";
}

<h2>Grill Confgurations</h2>

<p>
    @Html.ActionLink("Create New", "Create", new { id = 0, modelType = "" }, null) | 
    <a id="printerFriendlyLink" href="#">Printer Friendly View</a>
    <img id="printerFriendlyLoader" src="~/Content/images/linear-loader.gif" style="display: none;"/>
</p>
    <div id="printerFriendlyError" class="alert alert-danger" style="display: none;">
        <strong>Error:</strong>  Could not generate Printer Friendly View. Please try again.
    </div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MainBurnerCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InfraredBurnerCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GrillTypeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FuelId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SideBurnerTypeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GrillSizeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaterialId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ColorId)
        </th>
        @if (User.IsInRole("Admin"))
        {
            <th>
                @Html.DisplayNameFor(model => model.BuildTaskFlowchartDiagramData)
            </th>
        }
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MainBurnerCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InfraredBurnerCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GrillType.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Fuel.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SideBurnerType.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GrillSize.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Material.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Color.Name)
        </td>
        @if (User.IsInRole("Admin"))
        {
        <td>
                @Html.DisplayFor(modelItem => item.BuildTaskFlowchartDiagramData)
        </td>
        }
        <td>
            @Html.ActionLink("Build Task Diagram", "GrillConfgurationBuildTasksFlowchartDiagram", new { id = item.Id }) |
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>

<script src="~/Scripts/ViewScripts/index-view.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#printerFriendlyError").hide();
        storePrinterFriendlyData("@ViewBag.PrinterFriendlyUrl", "@ViewBag.AppEngineTimeout");
        $("#printerFriendlyLink").click(function () {
            viewReport(
                getPrinterFriendlyUrl(),
                getAppEngineTimeout(),
                $("#printerFriendlyError"),
                $("#printerFriendlyLink"),
                $("#printerFriendlyLoader")
            );
        });
    });
</script>
